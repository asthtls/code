# 2020 02 03
# 세마포어

Mutex와 세마포어(Semaphore)
-Critical Section(임계구역)에 대한 접근을 막기 위해 LOCKING 메커니즘이 필요
    -Mutex(binary semaphore)
        --임계구역에 하나의 스레드만 들어갈 수 있음    
    -Semaphore
        --임계구역에 여러 스레드가 들어갈 수 있음
        --counter를 두어서 동시에 리소스에 접근 할 수 있는 허용 가능한 스레드 수를 제어
        
세마포어(Semaphore)
    -P:검사(임계영역에 들어갈 때)
        --S값이 1이상이면, 임계 영역 진입 후 , S값 1차감(S값이 0이면 대기)
    -V:증가(임계영역에서 나올 때)
        --S값이 1더하고, 임계 영역을 나옴
    -S:세마포어 값(초기 값만큼 여러 프로세스가 동시 임계 영역 접근가능)

세마포어-바쁜 대기
-wait()은 S가 0이라면, 임계영역에 들어가기 위해, 반복문 수행
    --바쁜 대기, busy waiting
세마포어-대기큐
-운영체제 기술로 보완-대기큐
--S가 음수일 경우, 바쁜 대기 대신, 대기큐에 넣는다.

세마포어
-wakeup()함수를 통해 대기큐에 있는 프로세스 재실행

*참고: 주요 세마포어 함수(POSIX 세마포어)
-sem_open():세마포어 생성
-sem_wait():임계영역 접근 전, 세마포어를 잠그고, 세마포어가 잠겨있다면, 풀릴 때까지 대기
-sem_post():공유자원에 대한 접근이 끝났을 때 세마포어 잠금을 해제한다.
