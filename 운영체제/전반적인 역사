# 2020 01 23 3번째

1950년대 
ENIAC : 첫 번째 컴퓨터
당시는 운영체제가 없었다.
-이유는 그 당시 1개의 응용 프로그램을 실행시키기도 바빴다.
-응용 프로그램이 시스템 자원을 제어


1960년대 초기
프로그램 종류도 많아지고, 사용자도 슬슬 많아지기 시작
예를 들어
철수: 프로그램1 - 예상 실행 시간 12시간
영희: 프로그램2 - 예상 실행 시작1분

시작 순서
프로그램1 -> 프로그램2 # 이런 상황에서 영희는 12시간을 기다리고 나서야 프로그램2를 실행할 수 있다.
프로그램2 -> 프로그램1
-이런 문제를 해결하기 위해 "배치 처리 시스템(batch processing system)출현"
--여러 응용 프로그램을 등록시켜놓으면, 순차적으로 실행하는 시스템
--배치 처리 시스템을 기반으로 운영체제가 출현

배치 처리 시스템
1. 등록 (순서 포함) - Application1을 등록시키고 끝나면 자동으로 다음 응용 프로그램이 이어서 실행될 수 있다.
2. 

-예
컴퓨터 학과에 컴퓨터 1대(배치 처리 시스템 지원)
컴퓨터 학과에서 프로그램 과제를 내줌
후배들은 선배에 비해 프로그램 실행(테스트) 가 어려웠던 적이 있었다. 




# 2020 01 23 3번째

1960년대 후반
-새로운 개념 재한
-- 시분할 시스템(Time Sharing System)
-- 멀티 태스킹(Muti Tasking)
실제 운영체제로 구현되지는 않음 이론만.

시분할 시스템과 멀티 태스킹
-응용 프로그램이 CPU를 사용하는 시간을 자개 쪼개서, 여러 개의 응용 프로그램을 동시에 실행하는 기법

시분할 시스템
-위의 프1 12시간 프2 30분의 경우
-프1 12시간이 지나야 프2를 할 수 있었지만 시분할 시스템의 경우는 각각 시간을 쪼개 15분을 정하면
-프1 15분, 프2 15분씩 한 번씩 반복하며 하면 프2는 1시간만에 끝이난다.

프1이 실행되는 도중 프2를 누르면 프1이 종료되고 프2가 실행되는 시간까지는 '컴퓨터 응답시간'이라고 한다.

시분할 시스템 -다중 사용자를 지원하고 , 컴퓨터의 응답시간을 줄이기 위해 나옴.

멀티 태스킹: 단일 CPU에서, 여러 응용 프로그램의 병렬 실행을 가능케 하는 시스템
- CPU는 하나지만 프로그램이 2개 이상이라면 . - 각각의 프로그램 실행시간을 사람이 인식하기도 힘들게 
잘게 쪼개 프로그램들이 하나씩 돌아가며 동작시킨다.

보통은 시분할 시스템 = 멀티 태스킹

멀티 프로그래밍: 최대한 CPU를 많이 활용하도록 하는 시스템 (시간대비) 
-CPU활용도를 높여야 한다.
-프로그램1이 동작중에 중간에 비는 시간이 있다 . 이런 경우 CPU를 최대한 사용하기 위해 중간에 다른 프로그램을 시작

배치 처리 시스템의 단점
- 1. 컴퓨터 응답 시간(response time)이 오래 걸릴 수 있다.(앞에 먼저 실행하는 프로그램의 실행시간이 길다면 그만큼 뒤의 프로그램은 시간을 기다려야한다.)
- 2. 실행 시간도 오래걸릴 수 있다.(CPU가 필요없음에도 응용 프로그램이 CPU를 점유할 수 있기 때문)

시분할 시스템/멀티 태스킹 
    -핵심 기술: 시간을 잘게 쪼개서, 여러 응용 프로그램을 실행
        --컴퓨터 응답 시간을 줄일 수 있다.(시분할 시스템, 다중 사용자를 지원)
        --전체 응용 프로그램의 실행 시간도 줄일 수 있다. (멀티 프로그래밍)
        --결과적으로, 사용자가 느낄 때에는, 여러 응용 프로그램이 동시에 실행되는 것처럼 보인다. (멀티 태스킹)

# 2020 01 24 4번째

1970 
UNIX (유닉스) OS
- 미국 AT&T 벨 연구소
- 켄톰슨, 데니스 리치
- 데니스 리치: C언어를 개발

운영체제 개발에 C언어가 필요했던 이유
-1970년대 이전 : Assembly 언어로 소프트웨어 개발
    -CPU(명령어), Memory(주소)
    -컴퓨터마다 각각 다시 개발해줘야 하는 단점
    -프로그래밍 복잡도가 높음
- 1970년대 C언어가 개발된 후:
    -컴파일러:다시 작성할 필요가 없음
    -프로그래밍 복잡도는 낮음
    
    
*C언어를 기반으로 운영체제를 개발했다.

UNIX 특징
- 현대 운영체제의 기본 기술을 모두 포함한 최초의 운영체제
    --멀티 태스킹, 시분할 시스템, 멀티 프로그래밍
        -다중 사용자 지원(login)

# 2020 01 24 5번째

1980년대 - 개인용 컴퓨터
-개인용 컴퓨터 시대
    --1980년대 이전: 대형 컴퓨터를 여러 명이 접속해서 사용(UNIX)
    --1980년대~: Personal Computer(PC)
-용어 이해:CLI와 GUI
    -CLI(Command Line Interface): 터미널 환경
    -GUI(Graphical User Interface) : GUI환경

CLI:키보드
GUI:마우스

1980 년대 CLI -> GUI 
-1980년대 초반: 터미널 환경
-1980년대 중후반:GUI 환경(마우스)

# 2020 01 24 6번째

1990년대
    - 1. 응용 프로그램 시대 by GUI 환경, 개인용 컴퓨터(사용자 증대)
        --엑셀, 워드 프로세서 등등
        --WIndows OS 대중화
    - 2. 네트워크 기술 발전 - 월드 와이드웹(www) 대중화
    - 3. 오픈 소스 운동 활성화 시작
        -- UNIX 계열 OS + 응용 프로그램 자체 개발, 소스 오픈
        -- Linux(리눅스) 운영체제, 소스 오픈, 무료
    
* 위닝축구 게임 프로그램을 위해 플레이스테이션 기기를 구매 했다. 
이럴 경우 위닝 프로그램을 Killer Application 이라고 한다
또 , 엑셀 프로그램을 위해, windows 컴퓨터를 구매 이런경우도 같음



# 2020 01 24 7번째

2000년대 이후
    -1. 오픈 소스 활성화
        --LINUX(리눅스) 운영체제
        --Apache(아파치, 웹서버)
        --MySQL(데이터베이스)
        --요즘엔 딥러닝, 데이터사이언스, IOT,안드로이드 관련 기술이 오픈소스로 많이 만들어짐
    -2. 가상 머신, 대용량 병렬 처리 등 활성화



정리

**
1950 - 운영체제 x
     - 응용 프로그램이 직접 시스템 자원을 제어하며 실행
1960년대 초반
     - 배치 처리 시스템 출현, 운영체제가 출현
1960년대 후반
     - 시분할 시스템/멀티 태스킹
         --멀티 프로그래밍
     - 기술: CPU 시간을 잘개 쪼개기
     - 결괴: 다중 사용자 지원, 응용 프로그램 동시 실행
1970년대
     - 본격적으로 운영체제 중요성 부각
     - 현대 운영체제 기술 확립, UNIX OS에 최초 구현
     - UNIX: 멀티 태스킹, 시분할 시스템, 멀티 프로그래밍
1980년대
     - 1. 개인용 컴퓨터
     - 2. GUI 환경
1990년대
     - 1. 다양한 응용 프로그램 활성화
     - 2. 네트워크 발전 (인터넷) www
     - 3. 오픈 소스 운동 활성화(리눅스) 
2000년대
     - 1. 오픈 소스 활성화
     - 2. 가상 머신
     - 3. 대용량 병렬 처리

1. 운영체제는 응용 프로그램과 시스템 자원을 제어하고, 관리한다.
2. 응용 프로그램(Application) 용어 이해
3. 배치 처리 시스템, 시분할 시스템, 멀티 태스킹 개념
4. CLI(터미널) vs GUI환경 용어 이해 
     

 
 
