# section 05-2
# fastcampus
# ubuntu jupyter notebook python 3.8.1
# 2020 01 15
# 기본 반복문 for, while


v1 = 1
while v1 < 11 :    # 11보다 작을 경우까지만 반복문
    print("v1 is :", v1)
    v1 +=1
for v2 in range(1,11): # 기본 10만 입력하면 0~9까지 
    print("v2 is :", v2)
    v2 +=1

for v3 in range(1,100):
    v3  = v3 +100
    print("v3 is :",v3)
    

# 1~ 100d의 합

sum1 = 0
cnt1 = 1

while  cnt1 <= 100:
    sum1 += cnt1
    cnt1 += 1

print('1~100: ', sum1)
print('1~100: ', sum(range(1,101))) # sum은 총합 구하는 함수  1~100까지의 합 구하기.
print('1~100: ', sum(range(1,101,2))) # 짝수 구하게 2단위씩 더하기.

# 시퀀스 *** (순서가 있는) 자료형 반복 가능 for형에서 
# 문자열, 리스트, 튜플, 집합, 사전
# iterable 리턴 함수 : range,reversed, enumerate, filet, map, zip

names = ['Kim', 'Park', 'Lee', 'Choi', 'Yoo']

for name in names:  # 순서에 맞게 name에 들어감
    print("You are: ", name) # names리스트 순서에 맞게 출력됨.

word = "dreams" # d, r, e, a, m, s 글자 하나하나가 공간을 차지하고 있기 때문에 하나씩 반환

for s in word:
    print("Word: ", s)

my_info = {
    "name": "LEE",
    "age" : "22",
    "city": "Seoul"
}

for key in my_info:
    print("my info: ", key) # 기본 값은 key만 출력.

for key in my_info.values(): # values값을 출력하고 싶다면 values명령어를 써야함.
    print("my info: ", key)

for key in my_info.keys():
    print("my info: ", key)

for k,v in my_info.items():
    print("my info: ", k, v) # 둘다 출력하고 싶다면 items를 써야한다. 하지만 변수를 두개 줘야함

name = "LeeS"

for n in name:
    if n.isupper():
        print(n.lower())
    else:
        print(n.upper())

# break 원하는 지점에서 중단시킬 수 있는 명령어. 반드시 이해
numbers =  [14, 3, 4, 10 , 12, 31, 14, 51, 13, 11]
print(len(numbers))


# for else 구문

for i in numbers:
    if i == 33:
        print("found : 33!")
        break  # 원하는 숫자를 찾았을 경우 멈추는 명령어 
    else:
        print("not found 33!") 
else:
    print("Not found33......") # for else 구문(반복문이 정상적으로 수행 된 경우 else 블럭 수행)

# continue

lt = ["1", 2, 5, True, 4.3, complex(4)] # 한가지 변수에 많은 데이터 형식을 넣음. 유연함

for v in lt:
    if type(v) is float:
        continue # continue문을 사용해 밑의 문구를 생략하고 다음으로 넘어감.
    print("타입: ",type(v))
