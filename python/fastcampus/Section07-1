# Section 07-1
# fastcampus
# ubuntu jupyter notebook python 3.8.1
# 2020 01 16

# 파이썬 클래스 상세 이해
# Self, 클래스, 인스턴스 변수

# 클래스 ,  인스턴스 차이 중요
# 네임스페이스 : 객체를 인스턴스화 할 때 저장된 공간
# 클래스 변수 : 직접 사용 가능,객체보다 먼저 생성
# 인스턴스 변수 : 객체마다 별도로 존재, 인스턴스 생성 후 사용

# 선언
# class 클래스명:
#     함수
#     함수

# 예제 1
class UserInfo:    # 첫 글자는 대문자, 글자끼리 연결되는 경우 연결되는 단어 첫글자 대문자
    # 속성, 메소드
    def __init__(self, name):   # 초기화 . 반드시 알아두기
        self.name = name
    def user_info_p(self):
        print("Name: ", self.name)

# 네임스페이스
user1 = UserInfo("KIm") # user1= 인스턴스 생성
print(user1.name)
user1.user_info_p()
user2 = UserInfo("Park")
print(user2.name)
user2.user_info_p()

print(id(user1))
print(id(user2)) # 같은 함수의 변수를 사용한다고 해도 user1, user2의 데이터 공간은 다르다.
print(user1.__dict__)
print(user2.__dict__) 

# 예제2
# self의 이해
class SelfTest(): # () 생략가능
    def function1(): # 클래스 메소드
        print('function1 called')
    def function2(self): # 인스턴스 메소드
        print('function2 called')
        print(id(self))
        
self_test = SelfTest()
# self_test.function1()
SelfTest.function1()
self_test.function2()

print(id(self_test)) # self_test인자가 function2(self)에 인자가 넘어감.
SelfTest.function2(self_test) # 인스턴스를 생성하는 메소드는 self인자가 자동으로 넘어감. 없다면 클래스에서 직접 호출

# 예제 3
# 클래스 변수, 인스턴스 변수

class WareHouse:
    # 클래스 변수
    stock_num = 0
    def __init__(self, name):
        self.name = name
        WareHouse.stock_num +=1
    def __del__ (self): # 인스턴스 지울시 호출
        WareHouse.stock_num -=1

user1 = WareHouse("Kim")
user2 = WareHouse("Park")
user3 = WareHouse("Lee")

print(user1.__dict__)
print(user2.__dict__)
print(user3.__dict__)
print(WareHouse.__dict__) # 클래스 네임스페이스, 클래스 변수(공유)
# stock_num = 2 인스턴스가 하나씩 생성될 때마다 1씩 증가.

print(user1.name)
print(user2.name)
print(user3.name)

print(user1.stock_num) # 2
del user1
print(user2.stock_num) # user1 이 삭제되었으니 1로 준다.
print(user3.stock_num) # 동일


# self 와 클래스에 경우 이해하기 어려워서 개인적인 공부를 더 함.
