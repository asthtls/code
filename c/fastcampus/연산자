# define _CRT_SECURE_NO_WARNINGS
# include <stdio.h>


/*
	연산자
	= 등호는 우변항을 좌변항에 넣을 수 있다.
	자료형에 부합하는 값을 좌변항에 있는 변수에 넣는다.
*/
int main(void) {
	int a, b;
	scanf("%d %d", &a, &b);
	printf("%d + %d = %d\n", a, b, a + b);
	printf("%d - %d = %d\n", a, b, a - b);
	printf("%d * %d = %d\n", a, b, a * b);
	printf("%d / %d = %d\n", a, b, a / b);
	printf("%d %% %d = %d\n", a, b, a % b);
	printf("\t\"A\t B \"");
	
	printf("\n관계 연산자 \n");

	int d, e;
	scanf("%d %d", &d, &e); 
	printf("%d ", d > e);	// d가 e보다 작게 한다면 0 이 출력, 크다면 1이 출력
	unsigned int f, g;
	scanf("%d %d ", &f, &g); // 음수값은 입력받지 않는다. 인식 x
	printf("%d ", f > g);
	

	printf("\n 논리 연산자 \n");
	int i, j,k ;
	scanf("%d %d %d", &i, &j, &k);
	printf("%d\n", !i); // 반대값 0
	printf("%d\n", i && j); // 둘다 true값이니 1
	printf("%d\n", (i > j) && (i > k)); // 7 8 9 입력시 i가 둘 모두모다 크지 않으니 0

	printf("\n 증감 연산자 \n");
	int z = 3;
	printf("%d\n", ++z); // 4 출력
	printf("%d\n", z++); // 4 출력후에 +1  
	printf("%d",z); 


	printf("\n 삼항 연산자 \n");
	printf("%d\n", (a == b) ? 100 : -100); // a,b 값이 같다면 앞의 100 , 틀리다면 -100

	system("pause");
	return 0;
}

/*
	이스케이프 시퀀스(Escape Sequence)
	c언어에서 특정한 표현을 출력하기 위해 사용하는 문법
	\n - 줄바꿈
	\t - 수평 탭 넣기
	\\ - 백슬래시 넣기
	\" - 큰 따음표 넣기
	\b - 백 스페이스 넣기
*/

/*
	관계 연산자
	> 크다
	< 작다
	== 같다
	!= 다르다
	>= 크거나 같다
	<= 작거나 같다
	컴퓨터는 0만을 거짓으로 받아들이며 다른 모든 숫자는 참으로 받아들인다.
	하지만 출력할 경우에는 0은 거짓, 1은 참으로 출력한다.
*/


/*
	논리 연산자
	! 부정
	&& 그리고 = 둘 모두 True 여야 True
	|| 또는   = 둘중 하나라도 True 라면 True
*/

/*
	증감 연산자
	++(변수) i의 값을 1증가시킨 후에 증가된 값 출력
	(변수)++ i의 값을 1증가시킨 후에 증가되기 전의 값을 반환
	--(변수) i의 값을 1 감소시킨 후에 감소된 값을 반환
	(변수)-- i의 값을 감소시킨 후에 감소되기 전의 값을 반환
*/

/*
	삼항 연산자
	세 개의 항을 이용해 조건문 수행할 수 있는 연산자
*/

/*
	비트 연산자
	~ 부정	비트 뒤집는다
	& 그리고  비트중에서 같이 1인 위치만 출력
	| 또는	 비트중에서 둘중 하나라도 1이라면 출력
	^ 배타적	비트중에서 둘중 하나만 1이라면 1
	<< 왼쪽시프트	>>도 존재.	
*/
