# 2020 03 24

# 시스템 프로그래밍

# 쉘 

쉘 종류
-쉘(shell): 사용자와 컴퓨터 하드웨어 또는 운영체제간의 인터페이스
    --사용자의 명령을 해석해서, 커널에 명령을 요청해주는 역할
    --관련된 시스템콜을 사용해서 프로그래밍이 작성되어 있다.
    
-Bourne-Again Shell(bash) : GNU 프로젝트의 일환으로 개발, 리눅스의 거의 디폴트
-Bourne Shell(sh)
-C Shell(csh)
-Korn Shell(ksh): 유닉스에서 가장 많이 사용


리눅스 기본 명령어 정리
-리눅스의 명령어는 결국 쉘이 제공하는 명령어
-리눅스 기본 쉘이 bash이므로, bash에서 제공하는 기본 명령어를 배우는 것

whoami = 내가 누군지 확인 - 사용자가 누군지
passwd = 비밀번호 변경
useradd와 adduser
-useradd는 사용자 기본 설정 자동으로 하지 않는다.
-adduser는 사용자 기본 설정을 자동으로 수행한다.

sudo 명령어: root 권한으로 실행하기
-root 계정으로 로그인 하지 않은 상태에서 root 권한이 필요한 명령을 실행할 수 있도록 하는 프로그램
-기본 사용법
    --sudo 명령어
    --사용 예
        ---sudo apt-get update
-/etc/sudoers 설정 파일에서 다음과 같이 설정을 변경할 수 있다. 
    --visudo가 설치괴어 있다면, 다음과 같이 

*누구나 sudo 명령어를 사용한다면 root권한이 의미가 없다. 그러므로 제한된 계정만이 sudo 사용 가능하게 설정해야 한다.
        
su: 사용자 변경
-보통 su-와 함께 사용
    --su root: 현재 사용자의 환경설정 기반, root로 변경 = 현재 사용자의 아이디가 root로 바뀐다.
    --su - root: 변경되는 사용자의 환경설정을 기반으로, root로 전환 = -root의 이름 아이디 환경으로 지금 환경이 바뀐다.


파일 관련 명령어

pwd  : 현재 디렉토리 위치 확인 명령어
cd : 디렉토리 이동 명령어    
*cd ~ home/아이디 디렉토리로 이동
ls : 파일 목록 확인 
-al = 전체 파일 . 숨김 파일도 나타난다. 
ls = dir 
dir = windows에서 만듬 - 사용자가 많아 추가
*는 임의 문자열
?는 하나의 문자
예) ls host* = host뒤에 문자열이 나와도 출력 host.c, host.con , host.qwknekqwne
    ls host? = host뒤 문자 하나만 host.c
    

ls와 파일 권한
-파일마다 소유자, 소유자 그룹, 모든 사용자에 대해 
    --읽고, 쓰고, 실행하는 권한 설정
    --소유자 접근 권한 정보는 inode에 저장
-rwx rw- r-x
=읽기 권한 r, 쓰기 권한 w, 실행 권한 x
앞에서부터 소유자의 권한, 그룹의 권한, 기타사용자의 권한 

맨앞의 -는 (-) 일 경우에는 파일, (d)일 경우에는 디렉토리다.
총 10칸

chomod : 파일 권한 변경
-기호 문자를 사용하는 방법

누구에게 : u - 사용자, g - 그룹 , o - 기타, a - 전부
주는지 빼는지 : + - 더하기, - - 빼기, = - 설정
무슨 권한을 : r,w,x

예) test.c 파일
chmod u+rwx test.c 사용자에게 모든 권한을 준다. - test.c파일에 관한 권한을

2진수 계산 
rwx = 7
rwxrw-r-- = 764 숫자로 바꿀수도 있다.

chmod 700 test.c = 사용자에게 test.c에 관한 모든 권한을 부여

많이 사용하는 옵션
chmod -R 777 directory = -R(리커시브) == 내 directory(이름)과 하위 모든 디렉토리 모두 777권한을 준다.
*리커시브 = 재귀 = 내 하위 디렉토리 모두 적용

chown : 소유자 변경

chown[옵션][소유자:소유그룹][파일]
chgrp = 소유자 그룹 변경
chown = 소유자 변경
chown root: root file  = 소유자(root) : 소유그룹(root) 파일이름(file)

주로 사용하는 옵션
chown -R root:root directory = 현재 디렉토리 파일과 하위 디렉토리 파일 전부 root소유자에서 root소유그룹으로 변경

cat: 파일 보기
*보통 vi 대신 확인만 할 경우에 cat을 많이 사용한다.

head/tail : 파일의 시작과 끝만 보여준다.
예) head test.c 시작 몇줄만 보여줌
    tail test.c 끝 몇줄만 보여준다.

more : 파일 보기 (파일내용이 길 경우에는 파일내용이 화면을 넘어가기 전까지만 출력해준다.)

rm : remove 줄임 명령어

rm test.c 파일 삭제 = 별다른 명령어가 없을 경우에 리눅스는 처리되었다는 의미
*주요 사용 rm -rf 디렉토리명
r옵션: 하위 디렉토리를 포함한 모든 파일 삭제
f옵션: 강제로 파일이나 디렉토리 삭제

예) rm -f file
rm -rf file 


*숨김파일은 .로 시작한다.
*permission denied가 나오는 파일은 루트 권한이 없으면 읽기조차도 불가능 - 파일 권한 처리는 운영체제가 처리한다.
    
    

    
    
변경한 명령어

sudo vi sudoers 에 들어감
root줄을 shift + v 키로 복사 바로 p 입력을 해서 바로 밑에 만듬
그 후 root 위에 가서 x키 4번 입력해 root를 지운다. 
i키 = insert모드로 들어가 asthtls = 이름으로 바꿈 
:w! 로 강제저장
:q로 빠져나온다.
    
    
    
    

유닉스는 다중 사용자를 지원하는 시스템
-다중 사용자 관련 명령어




정리 
쉘 - Bourne-Again Shell(bash) : GNU 프로젝트의 일환으로 개발됨, 리눅스 거의 디폴트임
user 관련 명령 : whoami, useradd, passwd, su - 명령
Directory/file 관련 명령: pwd, cd, ls, cat, head/tail. more, rm
Directory/file 권한 관련 명령: chmod, chown, chgrp
관리자 권한으로 실행 : sudo
다양한 옵션은 man 명령으로 매뉴얼 확인 가능








